{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Development/next/hello-next/pages/jobs/[id].js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from './../../components/MyLayout';\nimport fetch from 'isomorphic-unfetch';\n\nvar Job = function Job(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 3\n    }\n  }, props.job.title, __jsx(\"p\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }\n  }, props.job.description));\n};\n\nJob.getInitialProps = function _callee(context) {\n  var id, response, job;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          id = context.query.id;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(fetch(\"http://careerstrip.com:3001/jobs/\".concat(id)));\n\n        case 3:\n          response = _context.sent;\n          _context.next = 6;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 6:\n          job = _context.sent;\n          return _context.abrupt(\"return\", {\n            job: job.response.job,\n            company: job.response.company\n          });\n\n        case 8:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Job;","map":{"version":3,"sources":["/Volumes/Development/next/hello-next/pages/jobs/[id].js"],"names":["Layout","fetch","Job","props","job","title","description","getInitialProps","context","id","query","response","json","company"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAGA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAU;AAClB,SAEF,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEYA,KAAK,CAACC,GAAN,CAAUC,KAFtB,EAGU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIF,KAAK,CAACC,GAAN,CAAUE,WAAd,CAHV,CAFE;AAQH,CATD;;AAWIJ,GAAG,CAACK,eAAJ,GAAsB,iBAAeC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACVC,UAAAA,EADU,GACJD,OAAO,CAACE,KADJ,CACVD,EADU;AAAA;AAAA,2CAEDR,KAAK,4CAAqCQ,EAArC,EAFJ;;AAAA;AAElBE,UAAAA,QAFkB;AAAA;AAAA,2CAGAA,QAAQ,CAACC,IAAT,EAHA;;AAAA;AAGZR,UAAAA,GAHY;AAAA,2CAIjB;AAACA,YAAAA,GAAG,EAAEA,GAAG,CAACO,QAAJ,CAAaP,GAAnB;AAAwBS,YAAAA,OAAO,EAAET,GAAG,CAACO,QAAJ,CAAaE;AAA9C,WAJiB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB;;AAMA,eAAeX,GAAf","sourcesContent":["import Layout from './../../components/MyLayout'\nimport fetch from 'isomorphic-unfetch'\n\n \nconst Job = (props) =>{\n    return (\n        \n\t\t<Layout>\n            \n            { props.job.title}\n            <p>{props.job.description}</p>\n\t\t</Layout>\n    )\n}\n   \n    Job.getInitialProps = async function(context) {\n        const { id }= context.query\n\t\tconst response = await fetch(`http://careerstrip.com:3001/jobs/${id}`)\n        const job = await response.json()\n\t\treturn {job :job.response.job, company: job.response.company}\n    }\n    export default Job"]},"metadata":{},"sourceType":"module"}