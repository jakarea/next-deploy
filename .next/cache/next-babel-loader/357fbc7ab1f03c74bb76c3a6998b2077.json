{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nvar _this = this,\n    _jsxFileName = \"/Volumes/Development/next/hello-next/pages/jobs/index.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from './../../components/MyLayout';\nimport Link from 'next/link';\nimport fetch from 'isomorphic-unfetch';\n\nvar Index = function Index(props) {\n  return __jsx(Layout, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 3\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 4\n    }\n  }, \"Jobs\"), __jsx(\"ul\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 4\n    }\n  }, props.jobs.map(function (job) {\n    return __jsx(\"li\", {\n      key: job.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 6\n      }\n    }, __jsx(Link, {\n      href: \"/jobs/[id]\",\n      as: \"/jobs/\".concat([\"a\", \"b\"]),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 25\n      }\n    }, __jsx(\"a\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 29\n      }\n    }, job.title)));\n  })));\n};\n\nIndex.getInitialProps = function _callee() {\n  var response, jobs;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch('http://careerstrip.com:3001/jobs'));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 5:\n          jobs = _context.sent;\n          return _context.abrupt(\"return\", {\n            jobs: jobs.response.jobs\n          });\n\n        case 7:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nexport default Index;","map":{"version":3,"sources":["/Volumes/Development/next/hello-next/pages/jobs/index.js"],"names":["Layout","Link","fetch","Index","props","jobs","map","job","id","title","getInitialProps","response","json"],"mappings":";;;;;;;AAAA,OAAOA,MAAP,MAAmB,6BAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,KAAP,MAAkB,oBAAlB;;AAEA,IAAMC,KAAK,GAAG,SAARA,KAAQ,CAAAC,KAAK;AAAA,SAEjB,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,EAEC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEaA,KAAK,CAACC,IAAN,CAAWC,GAAX,CAAe,UAAAC,GAAG;AAAA,WAC7B;AAAI,MAAA,GAAG,EAAEA,GAAG,CAACC,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACmB,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,YAAX;AAAwB,MAAA,EAAE,kBAAW,CAAC,GAAD,EAAM,GAAN,CAAX,CAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAID,GAAG,CAACE,KAAR,CADJ,CADnB,CAD6B;AAAA,GAAlB,CAFb,CAFD,CAFiB;AAAA,CAAnB;;AAkBCN,KAAK,CAACO,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACAR,KAAK,CAAC,kCAAD,CADL;;AAAA;AACjBS,UAAAA,QADiB;AAAA;AAAA,2CAEJA,QAAQ,CAACC,IAAT,EAFI;;AAAA;AAEjBP,UAAAA,IAFiB;AAAA,2CAGhB;AAACA,YAAAA,IAAI,EAAGA,IAAI,CAACM,QAAL,CAAcN;AAAtB,WAHgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAKD,eAAeF,KAAf","sourcesContent":["import Layout from './../../components/MyLayout'\nimport Link from 'next/link'\nimport fetch from 'isomorphic-unfetch'\n\nconst Index = props =>(\n    \n\t\t<Layout>\n\t\t\t<h1>Jobs</h1>\n\t\t\t<ul>\n                {\n                props.jobs.map(job => (\n\t\t\t\t\t<li key={job.id}>\n                        <Link href=\"/jobs/[id]\" as={`/jobs/${[\"a\", \"b\"]}`}>\n                            <a>{job.title}</a>\n                        </Link>\n\t\t\t\t\t</li>\n\t\t\t\t))\n                }\n\t\t\t</ul>\n\t\t</Layout>\n\t)\n\n\tIndex.getInitialProps = async function() {\n\t\tconst response = await fetch('http://careerstrip.com:3001/jobs')\n\t\tconst jobs = await response.json()\n\t\treturn {jobs : jobs.response.jobs}\n\t}\nexport default Index; "]},"metadata":{},"sourceType":"module"}